import os
import subprocess
from logger import setup_logger

logger = setup_logger(name="actions", log_file="actions.log")


def on_begin():
    print("üö™ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ '–±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–Ω–æ —Ü–∞—Ä—Å—Ç–≤–æ' ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ!")
    send_keys_to_obs('^(+(A))')  # Ctrl+Shift+A


def on_prayer():
    print("üôè –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ '–æ—Ç—á–µ –Ω–∞—à' ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ!")


def on_doors():
    print("üö™ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ '–¥–≤–µ—Ä–∏, –¥–≤–µ—Ä–∏' ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ!")
    send_keys_to_obs('^(+(A))')  # Ctrl+Shift+A


def execute_action(action_name):
    actions = {
        "on_prayer": on_prayer,
        "on_doors": on_doors,
        "on_begin": on_begin
    }
    action = actions.get(action_name)
    if action:
        action()


def send_keys_to_obs(hotkey: str):
    try:
        vbs_path = os.path.abspath("sendKeysTo.vbs")
        obs_exe = "obs64.exe"

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ VBS
        args = f'"{vbs_path}" "{obs_exe}" "{hotkey}"'
        subprocess.run(f'cscript {args}', shell=True)

    # self.logger.info("VBS-—Å–∫—Ä–∏–ø—Ç –¥–ª—è OBS —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ VBS: {e}")
