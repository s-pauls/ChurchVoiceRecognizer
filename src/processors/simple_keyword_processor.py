from typing import List, Dict

class SimpleKeywordProcessor:
    """–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –∏—â–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ."""

    def __init__(self, logger, keywords: List[str]):
        self.logger = logger
        self.keywords = [kw.lower() for kw in keywords]
        self.detected_count = {kw: 0 for kw in self.keywords}

    def process_phrase(self, text: str) -> bool:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ—Ä–∞–∑—É, –∏—â–∞ –≤ –Ω–µ–π –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞."""
        text_lower = text.lower()

        for keyword in self.keywords:
            if keyword in text_lower:
                self.detected_count[keyword] += 1
                self.logger.info(f"üîë –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ '{keyword}' (—Ä–∞–∑: {self.detected_count[keyword]})")

        return False

    def get_statistics(self) -> Dict[str, int]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤."""
        return self.detected_count.copy()

    def reset_statistics(self):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É."""
        self.detected_count = {kw: 0 for kw in self.keywords}